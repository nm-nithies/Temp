def get_broadcast_shape(conv_weight_shape, mul_const_shape):
    """
    Returns the shape that the Mul_const tensor should have to broadcast correctly with the conv_weights shape.
    It pads the  Mul_const shape with 1s so the two shapes are compatible for element-wise operations.

    Example:
        broadcast_shape_like((1280, 320, 20, 20), (1280,))
        â†’ [1280, 1, 1, 1]
    """

    shape1 = list(conv_weight_shape)
    shape2 = list(mul_const_shape)

    result_shape = []
    if len(mul_const_shape) == 1:
        found = False
        for dim in reversed(shape1):
            if dim in shape2 and not found:
                result_shape.insert(0, dim)
                found = True
            else:
                result_shape.insert(0, dim)


    else:
        length = len(result_shape) - 1
        for dim in reversed(shape1):
            if length >= 0 and dim == shape2[length]:
                result_shape.append(dim)
            else:
                result_shape.append(1)

    return tuple(result_shape)
