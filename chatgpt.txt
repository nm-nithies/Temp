import onnx
from onnxsim import simplify
from onnx import helper, numpy_helper
import numpy as np

filename = 'bevformer_tiny_epoch_24_optimized.onnx'

model = onnx.load(filename)

def set_constant_input(model, input_name, constant_value):
  input = next((inp for inp in model.graph.input if inp.name == input_name), None)
  if not input:
    raise ValueError(f"Input '{input_name}' not found in the model.")

  model.graph.input.remove(input)
  input_shape = [dim.dim_value for dim in input.type.tensor_type.shape.dim]
  tensor = numpy_helper.from_array(np.full(input_shape, constant_value, dtype=np.float32), name=input_name)
  model.graph.initializer.append(tensor)
  
set_constant_input(model, 'use_prev_bev', 0)
set_constant_input(model, 'prev_bev', 0)

onnx.checker.check_model(model)
onnx.save(model, 'bevformer_tiny_epoch_24_use_prev_bev_false.onnx')

model = onnx.load(filename)

set_constant_input(model, 'use_prev_bev', 1)

onnx.checker.check_model(model)
onnx.save(model, 'bevformer_tiny_epoch_24_use_prev_bev_true.onnx')
