 @onnx_op(
            op_type=MMCV_DOMAIN + "::MMCVModulatedDeformConv2d",
            inputs=[
                PyCustomOpDef.dt_float,
                PyCustomOpDef.dt_float,
                PyCustomOpDef.dt_float,
                PyCustomOpDef.dt_float,
            ],
            outputs=[PyCustomOpDef.dt_float],
            domain=MMCV_DOMAIN,
        )
        def MMCVModulatedDeformConv2d(input, offset, mask, weight, **kwargs):
            input = torch.from_numpy(input)
            offset = torch.from_numpy(offset)
            weight = torch.from_numpy(weight)
            mask = torch.from_numpy(mask)
            modulated_conv = ModulatedDeformConv2d(
                in_channels=weight.shape[1],
                out_channels=weight.shape[0],
                kernel_size=(weight.shape[2], weight.shape[3]),
                padding=1
            )
            modulated_conv.weight.data = weight
            return modulated_conv(input, offset, mask)
